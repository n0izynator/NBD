1.  MATCH shortestPaths = allShortestPaths((start:town {name: 'Darjeeling'})-[*]->(end:peak {name:'Sandakphu'})) RETURN shortestPaths
2.  MATCH shortestPaths = allShortestPaths((start:town {name: 'Darjeeling'})-[*]->(end:peak {name:'Sandakphu'}))
    WHERE ALL(path in relationships(shortestPaths) WHERE path.winter = 'true')
    RETURN shortestPaths
3.  MATCH paths = (start:town {name: 'Darjeeling'})-[*]->(end:peak {name:'Sandakphu'})
    RETURN paths, REDUCE(s = 0, path IN relationships(paths) | s + path.distance) AS s
    ORDER BY s
3a. MATCH paths = (start:town {name: 'Darjeeling'})-[*]->(end)
    WHERE ALL(path IN relationships(paths) WHERE TYPE(path) = 'twowheeler' AND path.summer = 'true')
    RETURN paths
4.  MATCH (airport:Airport)<-[origin:ORIGIN]-(flight:Flight)
    RETURN airport, COUNT(origin) AS flightCount
    ORDER BY flightCount
5.  